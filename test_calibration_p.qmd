---
title: "test_calibration"
format: html
---

```{r setup}
devtools::load_all()
```


```{r}
test_single <- function(probs_generator, bias = 0, sd = 0, func = calibration_p_saddle, ...) {
  dotlist <- list(...)
  ps <- replicate(100, {
    probs <- do.call(probs_generator, dotlist)
    if(bias != 0 || sd != 0) {
      probs_to_sim <- plogis(
        qlogis(probs) + bias + rnorm(length(probs), mean = 0, sd = sd)
        )
    } else {
      probs_to_sim <- probs
    }
    ys <- rbinom(length(probs), size = 1, prob = probs_to_sim)
    func(probs, ys)
  })
  
  return(ps)
}

func <-  miscalibration_resampling_p
ps <- test_single(runif, func = func, n = 100)
hist(ps)

ps <- test_single(\(n) rbinom(n, size = 1, prob = 0.5), func = func, n = 100)
hist(ps)


ps <- test_single(runif, func = func, n = 10000, bias = 0.5)
hist(ps)

dd <- rbeta(50, 2,1)
hoeffding_p(dd)


probs <- plogis(qlogis(runif(1000)) + 0.5)
hoeffding_p(probs)

ps <- test_single(\(n) rbinom(n, size = 1, prob = 0.4) * 0.3 + 0.2, func = func, n = 1000)
hist(ps)

```


# DAP tests

```{r}
test_DAP_single <- function(probs_generator, bias = 0, sd = 0, func = calibration_p_saddle, ...) {
  dotlist <- list(...)
  ps <- replicate(100, {
    probs <- do.call(probs_generator, dotlist)
    if(bias != 0 || sd != 0) {
      probs <- plogis(
        qlogis(probs) + bias + rnorm(length(probs), mean = 0, sd = sd)
        )
    } 
    func(probs)
  })
  
  return(ps)
}


func <- hoeffding_p

ps <- test_DAP_single(runif, n = 100000, func = func)
hist(ps)

ps <- test_DAP_single(\() rbinom(n = 100000, size = 1, prob = 0.5) * 0.5 + 0.25, func = func)
hist(ps)

```

